CREATE TABLE users (
    id NUMBER PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE user_profile (
    user_id NUMBER NOT NULL,
    profile_version NUMBER NOT NULL,
    profile_picture VARCHAR2(200),
    bio CLOB,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_user_profile PRIMARY KEY (user_id, profile_version),
    CONSTRAINT fk_user_profile FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE follows (
    id NUMBER PRIMARY KEY,
    following_user_id NUMBER NOT NULL,
    followed_user_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_following_user FOREIGN KEY (following_user_id) REFERENCES users(id),
    CONSTRAINT fk_followed_user FOREIGN KEY (followed_user_id) REFERENCES users(id)
);
CREATE TABLE posts (
    id NUMBER PRIMARY KEY,
    user_id NUMBER NOT NULL,
    title VARCHAR2(100),
    body CLOB,
    status VARCHAR2(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user_posts FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE likes (
    id NUMBER PRIMARY KEY,
    post_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_post_likes FOREIGN KEY (post_id) REFERENCES posts(id),
    CONSTRAINT fk_user_likes FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE comments (
    id NUMBER PRIMARY KEY,
    post_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    comment_text CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_post_comments FOREIGN KEY (post_id) REFERENCES posts(id),
    CONSTRAINT fk_user_comments FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE reply (
    comment_id NUMBER NOT NULL,
    reply_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    reply_text CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_reply PRIMARY KEY (comment_id, reply_id),
    CONSTRAINT fk_reply_comment FOREIGN KEY (comment_id) REFERENCES comments(id),
    CONSTRAINT fk_reply_user FOREIGN KEY (user_id) REFERENCES users(id)
);




